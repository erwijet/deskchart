generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "debian-openssl-3.0.x", "linux-musl"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Class {
    id          String      @id @default(cuid())
    title       String
    description String

    ownerId     String
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt

    students    Student[]
    layouts     Layout[]
}

model Layout {
    id          String      @id @default(cuid())
    title       String
    description String

    classId     String
    class       Class       @relation(fields: [classId], references: [id])

    height      Int
    width       Int
    pods        Pod[]

    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
}

model Pod {
    id          String      @id @default(cuid())
    title       String
    hex         String

    seats       Seat[]

    layoutId    String
    layout      Layout      @relation(fields: [layoutId], references: [id])
}

model Seat {
    id          String      @id @default(cuid())
    row         Int
    col         Int

    podId       String
    pod         Pod         @relation(fields: [podId], references: [id])
}

model Student {
    id          String      @id @default(cuid())
    gn          String
    sn          String

    classId     String
    class       Class       @relation(fields: [classId], references: [id])

    ownerId     String
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
}

// model Post {
//     id        Int      @id @default(autoincrement())
//     name      String
//     createdAt DateTime @default(now())
//     updatedAt DateTime @updatedAt

//     createdById String

//     @@index([name])
// }

